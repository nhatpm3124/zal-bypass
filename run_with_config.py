#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Phone Number Search Tool - Config Version
Ch·∫°y v·ªõi file c·∫•u h√¨nh thay v√¨ nh·∫≠p th·ªß c√¥ng
"""

import json
import sys
import os
from phone_search import PhoneNumberSearcher

def load_config(config_file):
    """T·∫£i c·∫•u h√¨nh t·ª´ file JSON"""
    try:
        with open(config_file, 'r', encoding='utf-8') as f:
            config = json.load(f)
        return config
    except FileNotFoundError:
        print(f"‚ùå Kh√¥ng t√¨m th·∫•y file config: {config_file}")
        print("üí° H√£y copy file config_example.json th√†nh config.json v√† ch·ªânh s·ª≠a")
        return None
    except json.JSONDecodeError as e:
        print(f"‚ùå L·ªói ƒë·ªãnh d·∫°ng JSON: {e}")
        return None

def validate_config(config):
    """Ki·ªÉm tra t√≠nh h·ª£p l·ªá c·ªßa config"""
    required_fields = ['website_url', 'search_box_selector', 'phone_pattern']
    
    for field in required_fields:
        if field not in config or not config[field]:
            print(f"‚ùå Thi·∫øu tr∆∞·ªùng b·∫Øt bu·ªôc: {field}")
            return False
    
    # Ki·ªÉm tra pattern s·ªë ƒëi·ªán tho·∫°i
    pattern = config['phone_pattern']
    if len(pattern) != 10:
        print(f"‚ùå Pattern s·ªë ƒëi·ªán tho·∫°i ph·∫£i c√≥ ƒë√∫ng 10 k√Ω t·ª±: {pattern}")
        return False
    
    return True

def run_search_with_config(config_file):
    """Ch·∫°y t√¨m ki·∫øm v·ªõi file config"""
    print("üîç Phone Number Search Tool - Config Mode")
    print("=" * 60)
    
    # T·∫£i config
    config = load_config(config_file)
    if not config:
        return
    
    # Ki·ªÉm tra config
    if not validate_config(config):
        return
    
    # Hi·ªÉn th·ªã th√¥ng tin config
    print("\nüìã C·∫•u h√¨nh:")
    print(f"üåê Website: {config['website_url']}")
    print(f"üîç Search box: {config['search_box_selector']}")
    print(f"üì± Pattern: {config['phone_pattern']}")
    if config.get('target_name'):
        print(f"üéØ T√™n c·∫ßn t√¨m: {config['target_name']}")
    print(f"‚è±Ô∏è Delay: {config.get('delay', 1)} gi√¢y")
    print(f"üìä Max results: {config.get('max_results', 10)}")
    
    # X√°c nh·∫≠n
    confirm = input("\n‚ùì B·∫°n c√≥ mu·ªën ti·∫øp t·ª•c? (y/n): ").strip().lower()
    if confirm not in ['y', 'yes', 'c√≥']:
        print("‚ùå H·ªßy b·ªè")
        return
    
    # Kh·ªüi t·∫°o searcher
    searcher = PhoneNumberSearcher(
        website_url=config['website_url'],
        search_box_selector=config['search_box_selector'],
        result_selector=config.get('result_selector')
    )
    
    try:
        # Thi·∫øt l·∫≠p driver
        if not searcher.setup_driver(headless=config.get('headless', False)):
            return
        
        # Ch·∫°y t√¨m ki·∫øm
        results = searcher.batch_search(
            pattern=config['phone_pattern'],
            target_name=config.get('target_name'),
            delay=config.get('delay', 1),
            max_results=config.get('max_results', 10)
        )
        
        # L∆∞u k·∫øt qu·∫£
        if results:
            filename = config.get('save_filename', 'search_results.json')
            searcher.save_results(results, filename)
            print(f"\nüéâ Ho√†n th√†nh! T√¨m th·∫•y {len(results)} k·∫øt qu·∫£.")
            
            # Hi·ªÉn th·ªã t√≥m t·∫Øt
            print("\nüìä T√≥m t·∫Øt k·∫øt qu·∫£:")
            for i, result in enumerate(results[:5], 1):
                print(f"{i}. {result['phone_number']} - {'‚úì' if result['found_target'] else '‚úó'}")
            
            if len(results) > 5:
                print(f"... v√† {len(results) - 5} k·∫øt qu·∫£ kh√°c")
        else:
            print("\nüòû Kh√¥ng t√¨m th·∫•y k·∫øt qu·∫£ n√†o.")
            
    except KeyboardInterrupt:
        print("\n‚ö†Ô∏è Ng∆∞·ªùi d√πng d·ª´ng ch∆∞∆°ng tr√¨nh")
    except Exception as e:
        print(f"\n‚ùå L·ªói: {e}")
    finally:
        searcher.close()

def main():
    """H√†m ch√≠nh"""
    if len(sys.argv) != 2:
        print("üìñ S·ª≠ d·ª•ng:")
        print("python run_with_config.py config.json")
        print("\nüí° H∆∞·ªõng d·∫´n:")
        print("1. Copy file config_example.json th√†nh config.json")
        print("2. Ch·ªânh s·ª≠a config.json v·ªõi th√¥ng tin website")
        print("3. Ch·∫°y: python run_with_config.py config.json")
        return
    
    config_file = sys.argv[1]
    if not os.path.exists(config_file):
        print(f"‚ùå File config kh√¥ng t·ªìn t·∫°i: {config_file}")
        return
    
    run_search_with_config(config_file)

if __name__ == "__main__":
    main() 